---
- hosts: localhost
  gather_facts: yes
  vars:
    linux: "{{ 'no' if ansible_distribution == 'MacOSX' else 'yes'}}"



  roles:
    - { role: zsh, tags: [ core, zsh ] }
    - { role: spacemacs, tags: [ editors ] }
    - { role: neovim, tags: [ editors, vim ] }
    - { role: jdk, tags: [ jdk, code ] }
    - { role: python, tags: [ python, code ] }
    - { role: ruby, tags: [ ruby, code, blog ] }
    - { role: backup, tags: [ backup ] }
    - { role: vscode, tags: [ editors, vscode ] }
    - { role: crystal, tags: [ crystal ] }
    - { role: jupyter, tags: [ jupyter, R ] }

  tasks:
  - name: Install git
    package:
      name: git
      state: present
    become: false if ansible_distribution == 'MacOSX' else true
    tags:
      - core
  - name: Install asciinema
    package:
      name: asciinema
      state: present
  - name: Install curl
    package:
      name: curl
      state: present
    become: false if ansible_distribution == 'MacOSX' else true
    tags:
      - core
  - name: Install chicken scheme
    package:
      name: chicken
      state: present
  - name: Install go
    package:
      name: go
      state: present
  - name: Install Imagemagick
    package:
      name: imagemagick
      state: present
    when: ansible_distribution == 'MacOSX'
  - name: Install Imagemagick
    package:
      name: ImageMagick
      state: present
    when: ansible_distribution == 'Fedora'
  - name: Check if MacDown is installed
    stat:
      path: /Applications/MacDown.app
    register: macdown_result
  - name: Install Macdown
    homebrew_cask:
      name: macdown
      state: present
    when:
      - macdown_result.stat.exists == False 
      - ansible_distribution == 'MacOSX'
  - name: Install libsndfile
    package:
      name: libsndfile
      state: present
  - name: Configure um
    block:
      - name: Create um config dir
        file:
          path: "{{ ansible_env.HOME }}/.um"
          state: directory
      - name: Create um config file
        file:
          path: "{{ ansible_env.HOME }}/.um/umconfig"
          state: touch
      - name: Add pages directory to um config file
        lineinfile:
          path: "{{ ansible_env.HOME }}/.um/umconfig"
          line: "pages_directory = {{ ansible_env.HOME }}/code/umpages"
      - name: Add editor to um config file
        lineinfile:
          path: "{{ ansible_env.HOME }}/.um/umconfig"
          line: editor = vim
  - name: Create .config directory
    file:
      path: ~/.config
      state: directory
    tags:
        - core
  - name: Install micro editor
    block:
    - name: Install micro editor (macOS)
      package:
        name: micro
        state: present
      when: ansible_distribution == 'MacOSX'
    - name: Install micro editor (Linux)
      shell: curl https://getmic.ro | bash
      args:
        chdir: /usr/bin
      when: ansible_distribution == 'Fedora'
  - name: Install rust
    block:
      - name: Install rustup.sh
        shell: curl https://sh.rustup.rs -sSf | sh -s -- -y
        become: true
    tags:
      - code
      - rust
  - name: Install neofetch (macOS)
    package:
      name: neofetch
      state: present
    become: false if ansible_distribution == 'MacOSX' else true
    tags:
      - core
  - name: Copy images
    shell: "{{item}}"
    with_items:
      - rm -Rf ~/.images
      - mkdir ~/.images
      - cp {{playbook_dir}}/images/* ~/.images
    tags:
      - core
  - name: Copy iTerm2 settings (macOS)
    shell: "{{item}}"
    with_items:
      - mkdir -p ~/.config/iterm2 
      - cp -R {{playbook_dir}}/iterm2/* ~/.config/iterm2
    when: ansible_distribution == 'MacOSX'
    tags:
      - core
  - name: Install byobu
    package:
      name: byobu
      state: present
    become: false if ansible_distribution == 'MacOSX' else true
    tags:
      - core
  - name: Install beets
    pip:
      name: beets
    tags:
      - sound